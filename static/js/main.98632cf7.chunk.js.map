{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Chart/Chart.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","undefined","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","separator","duration","Date","toDateString","Chart","props","useState","dailyData","setDailyData","useEffect","a","axios","get","modifiedData","map","dailydata","total","date","reportDate","Fetchdailydata","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","name","data2","options","legend","display","title","text","CountryPicker","country","setCountry","countries","fetchCountry","countryNames","i","key","FormControl","NativeSelect","onClick","e","clickMe","displayCountry","App","setData","bar","setBar","fetchData","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.98632cf7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2vb40\",\"card\":\"Cards_card__25JZM\",\"infected\":\"Cards_infected__nP0cb\",\"recovered\":\"Cards_recovered__1N9bT\",\"deaths\":\"Cards_deaths__3zFBO\"};","import React from 'react'\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport styles from './Cards.module.css'\r\nimport Countup from 'react-countup'\r\nimport cx from 'classnames';\r\n\r\nfunction Cards({ data }) {\r\n    const { confirmed, recovered, deaths, lastUpdate } = data;\r\n    if (confirmed === undefined) {\r\n        return <h1>loading...</h1>\r\n    }\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={1} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\"><Countup start={0} end={confirmed.value} separator=\",\" duration={1} /></Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of Active Cases of Covid</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\"><Countup start={0} end={recovered.value} separator=\",\" duration={2} /></Typography>\r\n                        <Typography color=\"textSecondary\" gutterBottom>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of Active Cases of Covid</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\"><Countup start={0} end={deaths.value} separator=\",\" duration={3} /></Typography>\r\n                        <Typography color=\"textSecondary\" gutterBottom>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of Active Cases of Covid</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { Line, Bar } from 'react-chartjs-2'\r\nimport styles from './Chart.module.css'\r\n\r\nfunction Chart(props) {\r\n    const [dailyData, setDailyData] = useState([]);\r\n    useEffect(() => {\r\n        const Fetchdailydata = async () => {\r\n            const { data } = await axios.get(`https://covid19.mathdro.id/api/daily`);\r\n            const modifiedData = data.map((dailydata) =>\r\n                ({\r\n                    confirmed: dailydata.confirmed.total,\r\n                    deaths: dailydata.deaths.total,\r\n                    date: dailydata.reportDate,\r\n                })\r\n            );\r\n            setDailyData(modifiedData);\r\n        }\r\n        Fetchdailydata();\r\n    }, [])\r\n    const lineChart = ((dailyData.length) ? (\r\n        <Line data={{\r\n            labels: dailyData.map(({ date }) => date),\r\n            datasets: [{\r\n                data: dailyData.map(({ confirmed }) => confirmed),\r\n                label: 'Infected',\r\n                borderColor: 'blue',\r\n                fill: true,\r\n            }, {\r\n                data: dailyData.map(({ deaths }) => deaths),\r\n                label: 'deaths',\r\n                borderColor: 'red',\r\n                fill: true,\r\n                backgroundColor: 'lightred'\r\n            }]\r\n\r\n        }} />) : <h1>loading...</h1>\r\n    );\r\n\r\n    var barChart = null;\r\n    if (props.name != '') {\r\n        barChart = (<Bar\r\n            data={{\r\n                labels: ['Infected', 'Recovered', 'Deaths'],\r\n                datasets: [{\r\n                    label: 'People',\r\n                    backgroundColor: ['blue', 'green', 'red',],\r\n                    fill: true,\r\n                    data: [props.data2.confirmed.value, props.data2.recovered.value, props.data2.deaths.value]\r\n                }]\r\n            }}\r\n            options={{\r\n                legend: { display: true },\r\n                title: { display: true, text: `Current state in ${props.name}` }\r\n            }}\r\n        />)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {props.name != '' ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart\r\n","import React, { useEffect, useState, useContext } from 'react'\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport styles from './CountryPicker.module.css'\r\nimport axios from 'axios'\r\n\r\nfunction CountryPicker(props) {\r\n    const [country, setCountry] = useState([]);\r\n    useEffect(() => {\r\n        const fetchCountry = async () => {\r\n            const { data } = await axios.get(`https://covid19.mathdro.id/api/countries`);\r\n            const { countries } = data;\r\n            setCountry(countries);\r\n        }\r\n        fetchCountry();\r\n    }, [])\r\n    const countryNames = (country.map((item, i) => <option key={i} value={item.name}>{item.name}</option>));\r\n    function displayCountry(e) {\r\n        props.clickMe(e)\r\n    }\r\n    return (\r\n        <div>\r\n            <FormControl className={styles.container}>\r\n                <NativeSelect onClick={(e) => displayCountry(e)}>\r\n                    <option value=\"\" >Global</option>\r\n                    {countryNames}\r\n                </NativeSelect>\r\n            </FormControl>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountryPicker\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Cards, Chart, CountryPicker } from './components'\r\nimport styles from './App.module.css'\r\nimport axios from 'axios'\r\n\r\nfunction App() {\r\n    const [data, setData] = useState({});\r\n    const [bar, setBar] = useState('');\r\n    useEffect(() => {\r\n        const fetchData = async (bar) => {\r\n            var fill\r\n            if (bar)\r\n                fill = `/countries/${bar}`;\r\n            else\r\n                fill = \"\";\r\n\r\n            const { data } = await axios.get(`https://covid19.mathdro.id/api${fill}`)\r\n            setData(data)\r\n        };\r\n        fetchData(bar);\r\n    }, [bar]);\r\n\r\n    function displayCountry(e) {\r\n        setBar(e.target.value)\r\n\r\n    }\r\n    return (\r\n\r\n        <div className={styles.container}>\r\n            <Cards data={data} />\r\n            <CountryPicker clickMe={displayCountry} />\r\n            <Chart name={bar} data2={data} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2w36V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__YPEWy\"};"],"sourceRoot":""}